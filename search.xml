<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/01/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>记一次升级Hexo博客的过程</title>
    <url>/2023/05/12/hexo-update/</url>
    <content><![CDATA[<h2 id="记一次升级Hexo博客的过程"><a href="#记一次升级Hexo博客的过程" class="headerlink" title="记一次升级Hexo博客的过程"></a>记一次升级Hexo博客的过程</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote>
<p>毕业后这几年一直比较佛系，但是最近突然感觉自己不能再这样下去了，所以我就在notion上面通过database建立了一个属于自己的计划池，把之前一直想做但是都被自己拖延的计划一个一个扔进池子里(类似需求池那种感觉吧)，并且会给这个计划打上一些标签，预估周期之类的。然后呢，等自己有时间的时候，一个一个完成。</p>
</blockquote>
<p>类似这样：</p>
<p><img src="/Untitled.png" alt="Untitled"></p>
<h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><p>首先自然是拉项目了，我的博客是部署在Github Page上的，整体架构大概就是hexo+next主题，然后加上之前搭建的isso评论系统和集成了gitter聊天室，还有之前写了一个github 发布的workflow</p>
<p>目录树是这样的：</p>
<figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line">├── _config.<span class="property">landscape</span>.<span class="property">yml</span></span><br><span class="line">├── _config.<span class="property">next</span>.<span class="property">yml</span></span><br><span class="line">├── _config.<span class="property">yml</span></span><br><span class="line">├── db.<span class="property">json</span></span><br><span class="line">├── package-lock.<span class="property">json</span></span><br><span class="line">├── package.<span class="property">json</span></span><br><span class="line">├── scaffolds</span><br><span class="line">│   ├── draft.<span class="property">md</span></span><br><span class="line">│   ├── page.<span class="property">md</span></span><br><span class="line">│   └── post.<span class="property">md</span></span><br><span class="line">├── source</span><br><span class="line">│   └── _posts</span><br><span class="line">│       └── hello-world.<span class="property">md</span></span><br><span class="line">├── .<span class="property">github</span></span><br><span class="line">│   └── workflows</span><br><span class="line">│       └── pages.<span class="property">yml</span></span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<p>是的，你没有看错，自打博客搭起来后，只有一篇hell-world哈哈</p>
<h3 id="升级过程"><a href="#升级过程" class="headerlink" title="升级过程"></a>升级过程</h3><p>项目有了，首先看版本号，先去官网看一下最新的hexo版本号和next主题的最新版本号，hexo最新的是7.0.0-rc1，next主题最新的是8.16.0，看了下现在的版本，倒也没有差太多，索性就一不做二不休，直接把这些依赖通通升级到最新的版本号，然后再一个一个解决问题就行了，升级后是右图</p>
<p><img src="/Untitled%201.png" alt="Untitled"></p>
<p><img src="/Untitled%202.png" alt="Untitled"></p>
<p>然后运行<code>yarn</code> 安装依赖，果然报错了，报错如下：</p>
<p><img src="/Untitled%203.png" alt="Untitled"></p>
<p>报错很明显了，切换个node版本就可以看，然后我用fnm包管理工具切换node版本到16.x ,然后再<code>yarn</code>安装，果然没啥问题了</p>
<p><img src="/Untitled%204.png" alt="Untitled"></p>
<p>OK,那么万里长征已经走了一半了，接下来就是运行<code>yarn deploy</code> ，看能不能正常运行；</p>
<p>咦，报了两个错：</p>
<p><img src="/Untitled%205.png" alt="Untitled"></p>
<p><img src="/Untitled%206.png" alt="Untitled"></p>
<p>先看第一个，不能找到模块vue，报错文件是根目录下的scripts&#x2F;index.js</p>
<p>我已经忘了当时为啥要加这个文件，看了一下文件内容，还是压缩后的代码，有点像elementUI的构建产物，既然想不起来为啥加了，就直接把他删了吧，然后再运行<code>yarn deploy</code> ，果然只剩下后面那个报错了；</p>
<p>这个报错是找不到一个文件，看了一下hexo的帮助文档，emm，没什么用；</p>
<p>然后我尝试将报错丢给gpt，也没有给我什么有用的信息，然后我就尝试全局搜，既然是找不到tomorrow-night.css，那肯定是哪个地方用到了，果然，在主题配置文件中找到了：</p>
<p><img src="/Untitled%207.png" alt="Untitled"></p>
<p>看到这，我大概明白了，就是highlight库里没有这个主题，我们换一个现在有的就可以了，改成了<code>stackoverflow-dark</code> </p>
<p>然后再运行<code>yarn deploy</code> ，大功告成：</p>
<p><img src="/Untitled%208.png" alt="Untitled"></p>
<h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>因为之前我写了一个发布hexo博客的工作流，我需要把里面用到node版本升级到16，不然安装依赖时会报错，如下：</p>
<p><img src="/Untitled%209.png" alt="Untitled"></p>
<p>然后提交代码，看看github actions是否运行成功</p>
<p><img src="/Untitled%2010.png" alt="Untitled"></p>
<p>OK，没问题，然后访问<a href="https://stevensunny.com/">https://stevensunny.com/</a>，没有问题</p>
<h3 id="gitter问题"><a href="#gitter问题" class="headerlink" title="gitter问题"></a>gitter问题</h3><p>之前给博客配置过gitter，是一个聊天室，在博客右下角就可以发送消息，但是这次部署后我试了一下，现在处于不可用状态，就顺便排查了一下，首先看调试工具，发现一个sidecar的js没有请求成功，然后经过搜集资料，这个文件就是实现gitter集成在hexo的文件，但是不幸的是，这个库已经被官方存档了，也就是不维护了，之前的静态文件自然也请求不到了。</p>
<p><img src="/Untitled%2011.png" alt="Untitled"></p>
<p>然后我就换成了next支持的另外一个聊天室，chatra</p>
<p><img src="/Untitled%2012.png" alt="Untitled"></p>
<blockquote>
<p>其实后来想了想，我是否可以自己把sidecar的库下载下来，然后build，把构建的产物放在自己的服务器上，然后修改next插件的源码，把文件地址替换为自己服务器上的地址，这样应该就能正常使用gitter了吧，毕竟gitter更符合对聊天室的定义(等有空了实操一下)</p>
</blockquote>
<h3 id="Isso评论"><a href="#Isso评论" class="headerlink" title="Isso评论"></a>Isso评论</h3><p>之前为什么选型用Isso搭建？在评论系统的选择中，我认为能够让读者方便留言是最重要的，因此需要科学上网的、需要注册账号的都被我排除在外，从而 Isso 成为了首要选择。试了一下，这次升级后Isso正常：</p>
<p><img src="/Untitled%2013.png" alt="Untitled"></p>
<h3 id="小彩蛋"><a href="#小彩蛋" class="headerlink" title="小彩蛋"></a>小彩蛋</h3><p>想起来之前写了一个脚本，用来自动生成hexo+next博客，并且自动push到github，自带workflow文件，需要的话可以自取，用法是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">my_scripts <span class="variable">$&#123;文件夹名称&#125;</span> <span class="variable">$&#123;github repo地址&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">$1</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$1</span></span><br><span class="line">hexo init .</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-theme-next</span><br><span class="line"><span class="built_in">touch</span> _config.next.yml</span><br><span class="line"><span class="built_in">cp</span> node_modules/hexo-theme-next/_config.yml _config.next.yml</span><br><span class="line"><span class="built_in">nl</span> /_config.yml | sed ‘100c theme: next’</span><br><span class="line"><span class="built_in">mkdir</span> .github/workflows</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;name: Pages</span></span><br><span class="line"><span class="string">on:</span></span><br><span class="line"><span class="string">  push:</span></span><br><span class="line"><span class="string">    branches:</span></span><br><span class="line"><span class="string">      - source  # default branch</span></span><br><span class="line"><span class="string">jobs:</span></span><br><span class="line"><span class="string">  pages:</span></span><br><span class="line"><span class="string">    runs-on: ubuntu-latest</span></span><br><span class="line"><span class="string">    steps:</span></span><br><span class="line"><span class="string">      - uses: actions/checkout@v2</span></span><br><span class="line"><span class="string">      - name: Use Node.js 16.x</span></span><br><span class="line"><span class="string">        uses: actions/setup-node@v1</span></span><br><span class="line"><span class="string">        with:</span></span><br><span class="line"><span class="string">          node-version: &#x27;</span>16.x<span class="string">&#x27;</span></span><br><span class="line"><span class="string">      - name: Cache NPM dependencies</span></span><br><span class="line"><span class="string">        uses: actions/cache@v2</span></span><br><span class="line"><span class="string">        with:</span></span><br><span class="line"><span class="string">          path: node_modules</span></span><br><span class="line"><span class="string">          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class="line"><span class="string">          restore-keys: |</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class="line"><span class="string">      - name: Install Dependencies</span></span><br><span class="line"><span class="string">        run: npm install</span></span><br><span class="line"><span class="string">      - name: Build</span></span><br><span class="line"><span class="string">        run: npm run build</span></span><br><span class="line"><span class="string">      - name: Deploy</span></span><br><span class="line"><span class="string">        uses: peaceiris/actions-gh-pages@v3</span></span><br><span class="line"><span class="string">        with:</span></span><br><span class="line"><span class="string">          github_token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;</span></span><br><span class="line"><span class="string">          publish_dir: ./public</span></span><br><span class="line"><span class="string">          publish_branch: master  # deploying branch&#x27;</span> &gt; .github/workflows/pages.yml</span><br><span class="line">git init</span><br><span class="line">git branch -M <span class="built_in">source</span></span><br><span class="line">git remote add origin <span class="variable">$2</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&#x27;\nyarn.lock\npackage-lock.json&#x27;</span> &gt;&gt; .gitignore</span><br><span class="line">git add .</span><br><span class="line">git commit -m “init”</span><br><span class="line">git push -u origin <span class="built_in">source</span></span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
